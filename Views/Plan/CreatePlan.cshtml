@model FP.Models.PlanModel
@using FP.Manager
@{
    ViewBag.Title = "CreatePlan";
}

<div class="breadcrumb">
    <h2>Create Plan</h2>
    <p><a href="~/Plan/PlanList"><i class="fa fa-list"></i>Planning Lists</a> / Add Plan </p>
</div>
<div class="container-fluid pt-4 px-4">
    <div class="row">
        @using (Html.BeginForm("CreatePlan", "Plan", FormMethod.Post, new { @class = "", @id = "CreatePlanformid", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.PlanID_pk)
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictId_fk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.DistrictId_fk, new List<SelectListItem>(), null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.DistrictId_fk, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BlockId_fk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.BlockId_fk, new List<SelectListItem>(), null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.BlockId_fk, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PanchayatId_fk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.PanchayatId_fk, new List<SelectListItem>(), null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.PanchayatId_fk, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VoId_fk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.VoId_fk, new List<SelectListItem>(), null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.VoId_fk, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PlanDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PlanDt, new { htmlAttributes = new { @class = "form-control plandatepicker" } })
                        @Html.ValidationMessageFor(model => model.PlanDt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HVDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HVDt, new { htmlAttributes = new { @class = "form-control plandatepicker" } })
                        @Html.ValidationMessageFor(model => model.HVDt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsBFY, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IsBFY, CommonModel.GetHVPMG(1), null, new { @class = "form-control" })
                        @*<div class="position-relative form-group">
                                <div class="checkbox">
                                    @foreach (var item in CommonModel.GetHVPMG())
                                    {
                                        <span class="check-spacer">
                                            @Html.CheckBoxFor(model => model.IsCheckBFY, new { id = "IsCheckBFY" + item.Value, @required = "required" }) @item.Text
                                        </span>
                                    }
                                    @Html.ValidationMessageFor(model => model.IsCheckBFY, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        @Html.ValidationMessageFor(model => model.IsBFY, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="div-DOMDt" style="display:none;">
                    @Html.LabelFor(model => model.DOMDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOMDt, new { htmlAttributes = new { @class = "form-control achdatepicker" } })
                        @Html.ValidationMessageFor(model => model.DOMDt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="div-DOMHVDt" style="display:none;">
                    @Html.LabelFor(model => model.DOMHVDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOMHVDt, new { htmlAttributes = new { @class = "form-control achdatepicker" } })
                        @Html.ValidationMessageFor(model => model.DOMHVDt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SubjectId, CommonModel.GetSubject(1), null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    <span class="check-spacer">
                        <input type="submit" name="btnsubmit" id="btnsubmit" class="btn btn-primary" value="Submit" />
                    </span>
                    <span class="check-spacer">
                        <a href="~/Plan/CreatePlan" class="btn btn-danger"><i class="fa fa-refresh"></i> Reset</a>
                    </span>
                </div>

            </div>
        }
       
        <div class="row">
            <div class="col=md-12" id="div-download"></div>
            <div class="col=md-6"></div>
            <div class="col=md-6"></div>
            <div class="col=md-6"></div>
            <div class="col-md-12">
                <div id="subdata"></div>
            </div>
        </div>

    </div>
</div>

<div class="col-md-12" id="div-popmodal">
    @*@Html.Partial("_BFYPOP", Model.AchBFYModel)*@
</div>

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>
    <script>
        $(document).ready(function () {

            //var dateFormat = "mm/dd/yy",
            //    from = $("#PlanDt")
            //        .datepicker({
            //            defaultDate: "+1w",
            //            changeMonth: true,
            //            numberOfMonths: 3
            //        })
            //        .on("change", function () {
            //            to.datepicker("option", "minDate", getDate(this));
            //        }),
            //    to = $("#DOMDt").datepicker({
            //        defaultDate: "+1w",
            //        changeMonth: true,
            //        numberOfMonths: 2
            //    })
            //        .on("change", function () {
            //            from.datepicker("option", "maxDate", getDate(this));
            //        });

            //function getDate(element) {
            //    var date;
            //    try {
            //        date = $.datepicker.parseDate(dateFormat, element.value);
            //    } catch (error) {
            //        date = null;
            //    }

            //    return date;
            //}

            /* Belove Filter  */

          //// To set mindate in enddate
            function customRange(input) {
                var currentYear = new Date().getFullYear();
              return {
                  minDate: (input.classList[1] == "achdatepicker" ? $(".plandatepicker").datepicker("getDate") : new Date((currentYear - 1), 12, 1))
              };
          }

          // To set maxdate in startdate
          function customRangeStart(input) {
              return {
                  maxDate: (input.classList[1] == "plandatepicker" ? $(".achdatepicker").datepicker("getDate") : null)
              };
          }
            $('.plandatepicker').datepicker(
                {
                    beforeShow: customRangeStart,
                    dateFormat: 'dd-M-yy',//yy-mm-dd
                    //maxDate: new Date,
                    // maxDate: moment(),
                    //maxDate: '0',
                   // maxDate: "+1M +10D",
                   // defaultDate: "+1w",
                      // changeMonth: true,
                       //numberOfMonths: 3
                    //changeMonth: true,
                    //changeYear: true,
                    //endDate: "today",
                    //onChangeMonthYear: function (year, month, inst) {
                    //    currentMonth = new Date(year, month - 1, 1);
                    //    //JavaScript used 0...11 for months. Jquery UI used 1...12 for months.
                    //},

                });
            $('.achdatepicker').datepicker(
                {
                    beforeShow: customRange,
                    dateFormat: "dd-M-yy",
                    //changeMonth: true,
                    //changeYear: true
                    "closeOnSelected": true
                });




            $('#IsBFY').change(function () {
                IsPGYHV();
            });

            GetDistrict("DistrictId_fk", 0);
            $('#DistrictId_fk').change(function () {
                GetBlock("BlockId_fk", 0, $(this).val());
            });
            $('#BlockId_fk').change(function () {
                GetPanchayat("PanchayatId_fk", 0, $('#DistrictId_fk').val(), $(this).val());
            });
            $('#PanchayatId_fk').change(function () {
                GetVillage("VoId_fk", 0, $('#DistrictId_fk').val(), $('#BlockId_fk').val(), $(this).val());
            });
            $('#VoId_fk').change(function () {
                BindData();
            });
            /* Role Wise */
            BindRolewise("DistrictId_fk", "BlockId_fk", "PanchayatId_fk", "VoId_fk");

            if ('@Model.PlanID_pk' != '00000000-0000-0000-0000-000000000000') {
                BindPlanEdit();
            }//End Edit Function

            $("#CreatePlanformid").submit(function (e) {
                e.preventDefault();
                CUCreatePlanData();
            });

            /* Achievement Function Start Cont */
            $(document).on('change',".Cont",function () {
                var value = $('input[name=IsPeerPresent]:checked').val();
                $('#div-IsContraception').hide();
                var value1 = $('input[name=IsFollowUpHV]:checked').val();
                if (value == "true" || value1 == "true") {
                    $('#div-IsContraception').show();
                }
            });

            $(document).on('change', 'input[name=IsContraception]', function () {
            //$('input[name=IsContraception]').change(function () {
                var value = $('input[name=IsContraception]:checked').val();
                $('#div-ContraceptionId_fk').hide();
                if (value == "true") {
                    $('#div-ContraceptionId_fk').show();
                }
            });
            $(document).on('change', 'input[name=Isservice]', function () {
           // $('input[name=Isservice]').change(function () {
                var value = $('input[name=Isservice]:checked').val();
                $('#div-Service').hide();
                //$('#div-ServiceRevcDt').hide();
                //$('#div-ServiceProvider').hide();
                //$('#div-Location').hide();
                if (value == "true") {
                    $('#div-Service').show();
                    $('#ServiceRevcDt').datepicker({
                        dateFormat: 'dd-M-yy',
                        maxDate: '0',
                        maxDate: "+1M +10D",
                        changeMonth: true,
                        changeYear: true,
                    });
                    //$('#div-ServiceRevcDt').show();
                    // $('#div-ServiceProvider').show();
                    // $('#div-Location').show();
                }
            });

            $(document).on('change', '#ContraceptionId_fk', function () {
            //$('#ContraceptionId_fk').change(function () {
                $('#ContraceptionOther').val('');
                $('#div-ContraceptionOther').hide();
                $('#ContraceptionOther').removeAttr('required');
                $('#div-UseMethodId_fk').hide();
                $('#div-Isservice').hide();
                $('#div-Service').hide();
                GetContraceptiveChildList("UseMethodId_fk", 0, "");
                $('#UseMethodId_fk').removeAttr('required');

                if ($(this).val() == "1") {
                    $('#div-UseMethodId_fk').show();
                    GetContraceptiveChildList("UseMethodId_fk", 0, 1);
                    $('#UseMethodId_fk').attr('required', 'required');
                    $('#div-Isservice').show();
                }
                else if ($(this).val() == "2") {
                    $('#div-UseMethodId_fk').show();
                    GetContraceptiveChildList("UseMethodId_fk", 0, 2);
                    $('#UseMethodId_fk').attr('required', 'required');
                    $('#div-Isservice').show();
                }
                else if ($(this).val() == "4") {
                    $('#ContraceptionOther').attr('required', 'required');
                    $('#div-ContraceptionOther').show();
                }
                else {
                    $('#div-ContraceptionOther').css('display', 'none');
                    $('#div-UseMethodId_fk').css('display', 'none');
                }

            });

            $(document).on('submit', "#AchBFYformid", function (e) {
            //$("#AchBFYformid").submit(function (e) {
                e.preventDefault();
                CUAchBFYData();
            });
            /* Achievement Function End */
            //$('#myModal').on('hidden.bs.modal', function () {
            //    $(this).find("#AchBFYformid")[0].reset();
            //});

    });

    function IsPGYHV() {
            $('#DOMDt').val(''); $('#div-DOMDt').hide();
            $('#DOMHVDt').val(''); $('#div-DOMHVDt').hide();
            if ($('#IsBFY').val() == "1") {
                $('#div-DOMDt').show();
            }
            else if ($('#IsBFY').val() == "2") {
                $('#div-DOMHVDt').show();
            }
            else if ($('#IsBFY').val() == "3") {
                $('#div-DOMHVDt').show();
                $('#div-DOMDt').show();
            }
        }

    function CUCreatePlanData() {
        debugger;
        //var vl = $.validator.unobtrusive.parse("#formid");
        //var Isvalid= $("#formid").validate();//CreatePlanformid
        var isvalid = $("#CreatePlanformid").valid();
        var IsCheck = true;
        if ($('#DistrictId_fk').val() == '') {
            toastr.error("Error", 'Please Select District');
            IsCheck = false;
        }
        if ($('#BlockId_fk').val() == '') {
            toastr.error("Error", 'Please Select Block');
            IsCheck = false;
        }
        if ($('#Panchayatid_fk').val() == '') {
            toastr.error("Error", 'Please Select Panchayat');
            IsCheck = false;
        }
        if ($('#VoId_fk').val() == '') {
            toastr.error("Error", 'Please enter Village Organization');
            IsCheck = false;
        }

        if (isvalid && IsCheck) {
            document.getElementById("btnsubmit").disabled = true;

            var PlanModel = new Object(); var model = [];
            PlanModel.PlanID_pk = $('#PlanID_pk').val();
            PlanModel.DistrictId_fk = $('#DistrictId_fk').val();
            PlanModel.BlockId_fk = $('#BlockId_fk').val();
            PlanModel.PanchayatId_fk = $('#PanchayatId_fk').val();
            PlanModel.VillageOId_fk = $('#VoId_fk').val();
            PlanModel.PlanDt = $('#PlanDt').val();
            PlanModel.HVDt = $('#HVDt').val();
            PlanModel.IsBFY = $('#IsBFY').val();
            PlanModel.DOMDt = $('#DOMDt').val();
            PlanModel.DOMHVDt = $('#DOMHVDt').val();
            PlanModel.SubjectId = $('#SubjectId').val();

            model.push(PlanModel);

            //let formData = new FormData();
            //formData.append('PlanID_pk', $('#PlanID_pk').val());
            //formData.append('DistrictId_fk', $('#DistrictId_fk').val());
            //formData.append('BlockId_fk', $('#BlockId_fk').val());
            //formData.append('PanchayatId_fk', $('#PanchayatId_fk').val());
            //formData.append('VoId_fk', $('#VoId_fk').val());
            //formData.append('PlanDt', $('#PlanDt').val());
            //formData.append('HVDt', $('#HVDt').val());
            //formData.append('IsBFY', $('#IsBFY').val());
            //formData.append('DOMDt', $('#DOMDt').val());
            //formData.append('DOMHVDt', $('#DOMHVDt').val());
            //formData.append('SubjectId', $('#SubjectId').val());
            var formData = $('#CreatePlanformid').serialize();

            $.ajax({
                url: document.baseURI + "/Plan/CreatePlan",
                type: "Post",
                data: formData,
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                //cache: false,
                //contentType: false,
                //processData: false,
                //data: JSON.stringify(model),
                success: function (resp) {
                    if (resp.StatusType == "success") {
                        toastr.success("Success", resp.Message);
                        //BindData();
                       // $("#CreatePlanformid")[0].reset();

                    }
                    else {
                        toastr.error("Error", resp.Message);
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    toastr.error("Error", errormsg);
                    //jQuery.event.trigger("ajaxStop");
                    return false;
                }
            });
        }
        else {
            return false;
        }

        }
    function BindPlanEdit() {
        debugger;
        $('#PlanID_pk').val('@Model.PlanID_pk');
        $('#DistrictId_fk').val('@Model.DistrictId_fk');
        GetBlock('BlockId_fk', 0, $('#DistrictId_fk').val());
        $('#BlockId_fk').val('@Model.BlockId_fk');
        GetPanchayat("PanchayatId_fk", 0, $('#DistrictId_fk').val(), $('#BlockId_fk').val());
        $('#PanchayatId_fk').val('@Model.PanchayatId_fk');
        GetVillage("VoId_fk", 0, $('#DistrictId_fk').val(), $('#BlockId_fk').val(), $('#PanchayatId_fk').val());
        $('#VoId_fk').val('@Model.VoId_fk');
        $('#PlanDt').val(moment('@Model.PlanDt').format("DD-MMM-YYYY"));
        $('#HVDt').val(moment('@Model.HVDt').format("DD-MMM-YYYY"));

        $('#IsBFY').val('@Model.IsBFY');
        $('#DOMDt').val(moment('@Model.DOMDt').format("DD-MMM-YYYY"));
        $('#DOMHVDt').val(moment('@Model.DOMHVDt').format("DD-MMM-YYYY"));
        $('#SubjectId').val('@Model.SubjectId');
        $('#div-DOMDt').hide(); $('#div-DOMHVDt').hide();
        if ($('#IsBFY').val() == "1") {
            $('#div-DOMDt').show();
        }
        else if ($('#IsBFY').val() == "2") {
            $('#div-DOMHVDt').show();
        }
        else if ($('#IsBFY').val() == "3") {
            $('#div-DOMHVDt').show();
            $('#div-DOMDt').show();
        }
    }

    /* Achievement Function */
    function BindData() {
            var filtermodel = new Object();
           filtermodel.DistrictId = $('#DistrictId_fk').val();
           filtermodel.BlockId = $('#BlockId_fk').val();
            filtermodel.PanchayatId = $('#PanchayatId_fk').val();
           filtermodel.VoId = $('#VoId_fk').val();


        $.ajax({
            type: "GET",
            url: document.baseURI + "/Plan/GetPlanBFYList",
            data: filtermodel, //JSON.stringify({ 'DistrictId': $('#DistrictId_fk').val(), 'BlockId': $('#BlockId_fk').val(), 'PanchayatId': $('#Panchayatid_fk').val() }),
            //cache: false,
            success: function (res) {
                if (res.IsSuccess) {
                    $("#subdata").html(res.Data);
                }
                $("#subdata").html(res.Data);
            },
            error: function (req, error) {
                if (error === 'error') { error = req.statusText; }
                var errormsg = 'There was a communication error: ' + error;
                //Do To Message display
            }
        });
        }
        function BindAchPop(BpkID, PlanID_pk) {
            $('#div-popmodal').html('');
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Plan/AchvpopForm")',
                data: '', //objectToPass,
                success: function (data) {

                    $('#div-popmodal').html(data);
                    $("#AchBFYformid")[0].reset();
                    if (BpkID && PlanID_pk) {
                        $('#myModal').modal('show');
                        GetContraceptive("ContraceptionId_fk", 0);
                        //$('#myModal').modal(); $('#myModal').modal('toggle');
                        $('#BFYId_fk').val(BpkID);
                        $('#PlanId_fk').val(PlanID_pk);
                        //$('#ServiceRevcDt').datepicker({
                        //    dateFormat: 'dd-M-yy',
                        //    maxDate: '0',
                        //    maxDate: "+1M +10D",
                        //    changeMonth: true,
                        //    changeYear: true,
                        //});
                    }
                }
            });
        }
        function DisplayPOP(BpkID, PlanID_pk) {
            debugger;
            //$('#exampleModalLong').modal();
            //$('#myModal').modal('toggle');
            //$('#myModal').modal('show');
           // $('#div-popmodal').html('');
            //$("a[data-target=#myModal]").click(function (ev) {
            //    ev.preventDefault();
            //    var target = $(this).attr("href");

            //    // load the url and show modal on success
            //    $("#myModal .modal-body").load(target, function () {
            //        $("#myModal").modal("show");
            //    });
            //});
            BindAchPop(BpkID, PlanID_pk);
            //if (BpkID && PlanID_pk) {
            //    $('#myModal').modal('show'); $('#myModal').modal(); $('#myModal').modal('toggle');
            //    $('#BFYId_fk').val(BpkID);
            //    $('#PlanId_fk').val(PlanID_pk);
            //    //$('#ServiceRevcDt').datepicker({
            //    //    dateFormat: 'dd-M-yy',
            //    //    maxDate: '0',
            //    //    maxDate: "+1M +10D",
            //    //    changeMonth: true,
            //    //    changeYear: true,
            //    //});
            //}

        }
        function CUAchBFYData() {
            debugger;
            //var vl = $.validator.unobtrusive.parse("#formid");
            //var Isvalid= $("#formid").validate();//CreatePlanformid
            var isvalid = $("#AchBFYformid").valid();
            var IsCheck = true;
            IsCheck = $('#BFYId_fk').val() == '' ? false : true;
            IsCheck = $('#PlanId_fk').val() == '' ? false : true;
            if ($('input[name="IsPeerPresent"]:checked').length == 0) {
                toastr.error("Error", 'Please Select Present in Peer Group Meeting');
                IsCheck = false;
            }
            if ($('input[name="IsFollowUpHV"]:checked').length == 0) {
                toastr.error("Error", 'Please Select FollowUp/HV in Current Month');
                IsCheck = false;
            }
            if ($('input[name="IsPeerPresent"]:checked').length != 0 || $('input[name="IsFollowUpHV"]:checked').length != 0) {
                if ($('input[name="IsContraception"]:checked').length == 0) {
                    toastr.error("Error", 'Please Select Want to use contraception after meeting/HV');
                    IsCheck = false;
                }
            }

            if (isvalid && IsCheck) {
                document.getElementById("btnpopsubmit").disabled = true;

                var formData = $('#AchBFYformid').serialize();

                $.ajax({
                    url: document.baseURI + "/Plan/AddAchBFY",
                    type: "Post",
                    data: formData,
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    // processData: false, contentType: false,
                    //cache: false,
                    //contentType: false,
                    //processData: false,
                    //data: JSON.stringify(model),
                    success: function (resp) {
                        if (resp.StatusType == "success") {
                            toastr.success("Success", resp.Message);
                            $("#AchBFYformid")[0].reset();
                            BindData();
                        }
                        else {
                            toastr.error("Error", resp.Message);
                        }
                    },
                    error: function (req, error) {
                        if (error === 'error') { error = req.statusText; }
                        var errormsg = 'There was a communication error: ' + error;
                        toastr.error("Error", errormsg);
                        //jQuery.event.trigger("ajaxStop");
                        return false;
                    }
                });
            }
            else {
                return false;
            }

        }
        function AchvmtInputClear() {

        }

    </script>
}
