@model FP.Models.PlanModel
@using FP.Manager
@{
    ViewBag.Title = "CreatePlan";
}

<h2>CreatePlan</h2>


<div class="breadcrumb">
    <h2>Create Plan</h2>
    <p><a href="/"><i class="fa fa-home"></i></a> / Plan </p>
</div>
<div class="container-fluid pt-4 px-4">
    <div class="row">
        @using (Html.BeginForm("CreatePlan", "Plan", FormMethod.Post, new { @class = "", @id = "formid", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.PlanID_pk)
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictId_fk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.DistrictId_fk, new List<SelectListItem>(), null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.DistrictId_fk, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BlockId_fk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.BlockId_fk, new List<SelectListItem>(), null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.BlockId_fk, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PanchayatId_fk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.PanchayatId_fk, new List<SelectListItem>(), null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.PanchayatId_fk, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VoId_fk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.VoId_fk, new List<SelectListItem>(), null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.VoId_fk, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PlanDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PlanDt, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.PlanDt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HVDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HVDt, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.HVDt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsBFY, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IsBFY, CommonModel.GetHVPMG(), "Select", new { @class = "form-control" })
                        @*<div class="position-relative form-group">
                                <div class="checkbox">
                                    @foreach (var item in CommonModel.GetHVPMG())
                                    {
                                        <span class="check-spacer">
                                            @Html.CheckBoxFor(model => model.IsCheckBFY, new { id = "IsCheckBFY" + item.Value, @required = "required" }) @item.Text
                                        </span>
                                    }
                                    @Html.ValidationMessageFor(model => model.IsCheckBFY, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        @Html.ValidationMessageFor(model => model.IsBFY, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="div-DOMDt" style="display:none;">
                    @Html.LabelFor(model => model.DOMDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOMDt, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.DOMDt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="div-DOMHVDt" style="display:none;">
                    @Html.LabelFor(model => model.DOMHVDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOMHVDt, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.DOMHVDt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SubjectId, CommonModel.GetSubject(), "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    <span class="check-spacer">
                        <input type="submit" name="btnsubmit" id="btnsubmit" class="btn btn-primary" value="Submit" />
                    </span>
                    <span class="check-spacer">
                        <a href="~/Plan/CreatePlan" class="btn btn-danger"><i class="fa fa-refresh"></i> Reset</a>
                    </span>
                </div>

            </div>
        }
       
        <div class="row">
            <div class="col=md-12" id="div-download"></div>
            <div class="col=md-6"></div>
            <div class="col=md-6"></div>
            <div class="col=md-6"></div>
            <div class="col-md-12">
                <div id="subdata"></div>
            </div>
        </div>

    </div>
</div>

@Html.Partial("_BFYPOP")

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>
    <script>
    $(document).ready(function () {

        var dateFormat = "mm/dd/yy",
            from = $("#PlanDt")
                .datepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 3
                })
                .on("change", function () {
                    to.datepicker("option", "minDate", getDate(this));
                }),
            to = $("#DOMDt").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 3
            })
                .on("change", function () {
                    from.datepicker("option", "maxDate", getDate(this));
                });

        function getDate(element) {
            var date;
            try {
                date = $.datepicker.parseDate(dateFormat, element.value);
            } catch (error) {
                date = null;
            }

            return date;
        }

        $('#IsBFY').change(function () {
            $('#DOMDt').val(''); $('#div-DOMDt').hide();
            $('#DOMHVDt').val(''); $('#div-DOMHVDt').hide();
            if ($(this).val() == "1") {
                $('#div-DOMDt').show();
            }
            else if ($(this).val() == "2") {
                $('#div-DOMHVDt').show();
            }
            else if ($(this).val() == "3") {
                $('#div-DOMHVDt').show();
                $('#div-DOMDt').show();
            }
        });

            @*if ('@Model.PlanID_pk' != '00000000-0000-0000-0000-000000000000') {
                debugger;
                BindEdit();
            }//End Edit Function*@

            $("#btnsubmit").click(function (e) {
                e.preventDefault();
                CUData();
            });

            GetDistrict("DistrictId_fk", 0);
            $('#DistrictId_fk').change(function () {
                GetBlock("BlockId_fk", 0, $(this).val());
            });
            $('#BlockId_fk').change(function () {
                GetPanchayat("PanchayatId_fk", 0, $('#DistrictId_fk').val(), $(this).val());
            });
            $('#PanchayatId_fk').change(function () {
                GetVillage("VoId_fk", 0, $('#DistrictId_fk').val(), $('#BlockId_fk').val(), $(this).val());
            });
            $('#VoId_fk').change(function () {
                BindData();
            });
            if ('@CommonModel.RoleNameCont.CNRP' === '@MvcApplication.CUser.Role') {
                $('#DistrictId_fk').val(('@MvcApplication.CUser.DistrictId').toLowerCase());
                $('#DistrictId_fk').attr("style", "pointer-events: none;");
                GetBlock('BlockId_fk', 0, $('#DistrictId_fk').val());
                $('#BlockId_fk').val(('@MvcApplication.CUser.BlockId').toLowerCase());
                $('#BlockId_fk').attr("style", "pointer-events: none;");
                GetPanchayat("PanchayatId_fk", 0, $('#DistrictId_fk').val(), $('#BlockId_fk').val());
                $('#PanchayatId_fk').val(('@MvcApplication.CUser.Panchayatid').toLowerCase());
                $('#PanchayatId_fk').attr("style", "pointer-events: none;");
                GetVillage("VoId_fk", 0, $('#DistrictId_fk').val(), $('#BlockId_fk').val(), $('#PanchayatId_fk').val());
            }

    });

    function CUData() {
        debugger;
        //var vl = $.validator.unobtrusive.parse("#formid");
        //var Isvalid= $("#formid").validate();
        var isvalid = $("#formid").valid();
        var IsCheck = true;
        if ($('#DistrictId_fk').val() == '') {
            toastr.error("Error", 'Please Select District');
            IsCheck = false;
        }
        if ($('#BlockId_fk').val() == '') {
            toastr.error("Error", 'Please Select Block');
            IsCheck = false;
        }
        if ($('#Panchayatid_fk').val() == '') {
            toastr.error("Error", 'Please Select Panchayat');
            IsCheck = false;
        }
        if ($('#VoId_fk').val() == '') {
            toastr.error("Error", 'Please enter Village Organization');
            IsCheck = false;
        }

        if (isvalid && IsCheck) {
            var PlanModel = new Object(); var model = [];
            PlanModel.PlanID_pk = $('#PlanID_pk').val();
            PlanModel.DistrictId_fk = $('#DistrictId_fk').val();
            PlanModel.BlockId_fk = $('#BlockId_fk').val();
            PlanModel.PanchayatId_fk = $('#PanchayatId_fk').val();
            PlanModel.VillageOId_fk = $('#VoId_fk').val();
            PlanModel.PlanDt = $('#PlanDt').val();
            PlanModel.HVDt = $('#HVDt').val();
            PlanModel.IsBFY = $('#IsBFY').val();
            PlanModel.DOMDt = $('#DOMDt').val();
            PlanModel.DOMHVDt = $('#DOMHVDt').val();
            PlanModel.SubjectId = $('#SubjectId').val();

            model.push(PlanModel);

            //let formData = new FormData();
            //formData.append('PlanID_pk', $('#PlanID_pk').val());
            //formData.append('DistrictId_fk', $('#DistrictId_fk').val());
            //formData.append('BlockId_fk', $('#BlockId_fk').val());
            //formData.append('PanchayatId_fk', $('#PanchayatId_fk').val());
            //formData.append('VoId_fk', $('#VoId_fk').val());
            //formData.append('PlanDt', $('#PlanDt').val());
            //formData.append('HVDt', $('#HVDt').val());
            //formData.append('IsBFY', $('#IsBFY').val());
            //formData.append('DOMDt', $('#DOMDt').val());
            //formData.append('DOMHVDt', $('#DOMHVDt').val());
            //formData.append('SubjectId', $('#SubjectId').val());
            var formData = $('#formid').serialize();

            $.ajax({
                url: document.baseURI + "/Plan/CreatePlan",
                type: "Post",
                data: formData,
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                //cache: false,
                //contentType: false,
                //processData: false,
                //data: JSON.stringify(model),
                success: function (resp) {
                    if (resp.StatusType == "success") {
                        toastr.success("Success", resp.Message);
                        //BindData();
                    }
                    else {
                        toastr.error("Error", resp.Message);
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    toastr.error("Error", errormsg);
                    //jQuery.event.trigger("ajaxStop");
                    return false;
                }
            });
        }
        else {
            return false;
        }

    }

        function BindData() {
            var filtermodel = new Object();
           filtermodel.DistrictId = $('#DistrictId_fk').val();
           filtermodel.BlockId = $('#BlockId_fk').val();
            filtermodel.PanchayatId = $('#PanchayatId_fk').val();
           filtermodel.VoId = $('#VoId_fk').val();


        $.ajax({
            type: "GET",
            url: document.baseURI + "/Plan/GetPlanBFYList",
            data: filtermodel, //JSON.stringify({ 'DistrictId': $('#DistrictId_fk').val(), 'BlockId': $('#BlockId_fk').val(), 'PanchayatId': $('#Panchayatid_fk').val() }),
            //cache: false,
            success: function (res) {
                if (res.IsSuccess) {
                    $("#subdata").html(res.Data);
                }
                $("#subdata").html(res.Data);
            },
            error: function (req, error) {
                if (error === 'error') { error = req.statusText; }
                var errormsg = 'There was a communication error: ' + error;
                //Do To Message display
            }
        });
    }


    function DisplayPOP(BFYID) {
        debugger;
        //$('#exampleModalLong').modal();
        //$('#myModal').modal('toggle');
        //$('#myModal').modal('show');
        $('#myModal').modal('show'); 
    }

    </script>
}
